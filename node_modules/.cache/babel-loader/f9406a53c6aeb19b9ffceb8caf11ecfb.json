{"ast":null,"code":"var _jsxFileName = \"/home/szigony/Documents/Workspace/Task/FullThrottle/mytask-fullthrottlelabs/src/task/Task.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport ProductService from '../task/Test JSON.json';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Calendar } from 'primereact/calendar';\nexport default class Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: null,\n      socialMediaList: [] = [],\n      selectedrow: [] = [],\n      displayBasic: Boolean = false,\n      date1: null,\n      activity_time: [] = [],\n      activity_time_table: Boolean = false\n    };\n    this.displayBasic = this.onClick.bind(this);\n  }\n\n  componentDidMount() {// this.productService.getProductsSmall().then(data => this.setState({ products: data }));\n    // this.socialMediaList = ProductService.members;\n  }\n\n  onClick() {\n    this.state.displayBasic = true;\n  }\n\n  onHide(name) {\n    this.setState({\n      displayBasic: false\n    });\n  }\n\n  renderFooter(name) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Cancel\",\n      icon: \"pi pi-check\",\n      onClick: () => this.onHide(),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  selected_date(picked) {\n    this.setState({\n      activity_time: []\n    });\n    let pick = picked.target.value;\n    debugger;\n    console.log(\"pick\", pick);\n    let date = pick.getDate().toString();\n    let month = pick.getmonth().toString();\n    let year = pick.getyear().toString();\n    let s_val = date + month + year;\n    let pickedd = pick.toGMTString().slice(4).split(' ').slice(0, 4).join(' ');\n    console.log(\"pick\", day);\n\n    if (this.state.selectedrow.activity_periods.length > 0) {\n      for (let i = 0; i < this.state.selectedrow.activity_periods.length; i++) {\n        let Get_date = this.state.selectedrow.activity_periods[i].start_time;\n        let conv_get_date = Get_date.slice(4).split(' ').slice(0, 4).join(' ');\n\n        if (conv_get_date == pickedd) {\n          var newArr = this.state.activity_time;\n          newArr.push(this.state.selectedrow.activity_periods[i]);\n          this.setState({\n            activity_time: newArr\n          });\n        } else {\n          console.log(\"false\", this.state.activity_time_table);\n        }\n      }\n\n      if (this.state.activity_time.length > 0) {\n        debugger;\n        this.setState({\n          activity_time_table: true\n        });\n      } else {\n        debugger;\n        this.setState({\n          activity_time_table: false\n        });\n      }\n    } else {\n      alert(\"No Activity Record Found\");\n    }\n  }\n\n  render() {\n    const activity_time_table = this.state.activity_time_table;\n    this.socialMediaList = ProductService.members;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: this.socialMediaList,\n      header: \"Employees List\",\n      footer: \"Footer\",\n      className: \"p-datatable-gridlines\",\n      selectionMode: \"single\",\n      selection: this.state.selectedrow,\n      onSelectionChange: e => this.setState({\n        selectedrow: e.value\n      }, this.onClick('displayBasic')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"id\",\n      header: \"ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"real_name\",\n      header: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Dialog, {\n      header: this.state.selectedrow.real_name,\n      visible: this.state.displayBasic,\n      style: {\n        width: '70vw'\n      },\n      maximizable: \"displayBasic\",\n      maximized: \"displayBasic\",\n      footer: this.renderFooter(),\n      onHide: () => this.onHide(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Employee ID :\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"\",\n      value: this.state.selectedrow.id,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"Name :\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"\",\n      value: this.state.selectedrow.real_name,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Location :\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"\",\n      value: this.state.selectedrow.tz,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Pick a Date :\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      id: \"basic\",\n      value: this.state.date1,\n      onChange: e => this.selected_date(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: this.state.activity_time,\n      header: \"Activity Log\",\n      footer: \"Footer\",\n      emptyMessage: \"No Data Found\",\n      className: \"p-datatable-gridlines\",\n      selectionMode: \"single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"start_time\",\n      header: \"Start Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"end_time\",\n      header: \"End Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/szigony/Documents/Workspace/Task/FullThrottle/mytask-fullthrottlelabs/src/task/Task.js"],"names":["React","Component","DataTable","Column","ProductService","Dialog","Button","InputText","Calendar","Task","constructor","props","state","products","socialMediaList","selectedrow","displayBasic","Boolean","date1","activity_time","activity_time_table","onClick","bind","componentDidMount","onHide","name","setState","renderFooter","selected_date","picked","pick","target","value","console","log","date","getDate","toString","month","getmonth","year","getyear","s_val","pickedd","toGMTString","slice","split","join","day","activity_periods","length","i","Get_date","start_time","conv_get_date","newArr","push","alert","render","members","e","real_name","width","id","tz"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport ProductService from '../task/Test JSON.json';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Calendar } from 'primereact/calendar';\n\n\nexport default class Task extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: null,\n            socialMediaList : [] = [],\n            selectedrow: []=[],\n            displayBasic: Boolean = false,\n            date1 : null,\n            activity_time :[] =[],\n            activity_time_table : Boolean = false,\n        };\n        this.displayBasic = this.onClick.bind(this);\n\n    }\n\n    componentDidMount() {\n        // this.productService.getProductsSmall().then(data => this.setState({ products: data }));\n        // this.socialMediaList = ProductService.members;\n    }\n\n    onClick(){\n        this.state.displayBasic=true;\n    }\n    onHide(name) {\n        this.setState({\n            displayBasic : false\n        });\n    }\n    renderFooter(name) {\n        return (\n            <div>\n                <Button label=\"Cancel\" icon=\"pi pi-check\" onClick={() => this.onHide()} autoFocus />\n            </div>\n        );\n    }\n    selected_date(picked){\n        this.setState({activity_time:[]})\n        let pick = picked.target.value\n        debugger\n        console.log(\"pick\",pick);\n        let date = pick.getDate().toString();\n        let month= pick.getmonth().toString();\n        let year = pick.getyear().toString();\n       let s_val = date + month + year\n        let pickedd = pick.toGMTString().slice(4).split(' ').slice(0, 4).join(' ');\n        console.log(\"pick\",day);\n        if(this.state.selectedrow.activity_periods.length  > 0 ){\n           for(let i=0 ; i < this.state.selectedrow.activity_periods.length ; i++){\n            let Get_date = this.state.selectedrow.activity_periods[i].start_time;\n            let conv_get_date = Get_date.slice(4).split(' ').slice(0, 4).join(' ')\n                if(conv_get_date == pickedd){\n                   var newArr = this.state.activity_time;\n                   newArr.push(this.state.selectedrow.activity_periods[i]);\n                   this.setState({activity_time:newArr})\n                }\n                else {\n                   console.log(\"false\",this.state.activity_time_table);\n                }\n           }\n           if (this.state.activity_time.length > 0){\n            debugger\n              this.setState({activity_time_table: true});\n\n           }\n           else{\n            debugger\n            this.setState({activity_time_table: false});\n         }\n        }\n        else {\n            alert(\"No Activity Record Found\");\n        }\n    }\n    render() {\n       const activity_time_table = this.state.activity_time_table\n        this.socialMediaList = ProductService.members;\n        return (\n            <div className=\"p-4\">\n            <div className=\"card\">\n                <DataTable value={this.socialMediaList} header=\"Employees List\" footer=\"Footer\" className=\"p-datatable-gridlines\" selectionMode=\"single\"\n                    selection={this.state.selectedrow} onSelectionChange={e => this.setState({selectedrow: e.value}\n                        ,this.onClick('displayBasic'))} >\n                    <Column field=\"id\"  header=\"ID\"></Column>\n                    <Column field=\"real_name\" header=\"Name\"></Column>\n                </DataTable>\n            </div>\n            <Dialog header={this.state.selectedrow.real_name} visible={this.state.displayBasic} style={{ width: '70vw' }} maximizable='displayBasic' maximized='displayBasic' footer={this.renderFooter()} onHide={() => this.onHide()}>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm-4 text-left\">\n                        Employee ID :\n                        <div className=\"pl-1\">\n                         <InputText id=\"\" value={this.state.selectedrow.id} disabled/>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4 text-left\">\n                        Name :\n                        <div className=\"pl-1\">\n                          <InputText id=\"\" value={this.state.selectedrow.real_name} disabled/>\n                       </div>\n                    </div>\n                    <div className=\"col-sm-4 text-left\">\n                        Location :\n                        <div className=\"pl-1\">\n                          <InputText id=\"\" value={this.state.selectedrow.tz} disabled/>\n                       </div>\n                    </div>\n                </div>\n                <div className=\"row p-3\">\n                    <div className=\"col-sm-4 text-left\">\n                        Pick a Date :\n                        <div className=\"pl-1\">\n                        <Calendar id=\"basic\" value={this.state.date1}      onChange={(e)=> this.selected_date(e)}/>\n                        </div>\n                    </div> \n                    <div className=\"col-sm-4\">\n                        <DataTable value={this.state.activity_time} header=\"Activity Log\" footer=\"Footer\" emptyMessage=\"No Data Found\" className=\"p-datatable-gridlines\" selectionMode=\"single\" >\n                            <Column field=\"start_time\" header=\"Start Time\" ></Column>\n                            <Column field=\"end_time\" header=\"End Time\"></Column>\n                        </DataTable>   \n                    </div>\n                </div>\n            </Dialog>\n        </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}